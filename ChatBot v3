import os
import sqlite3
import difflib

def limpar_tela():
    os.system('cls' if os.name == 'nt' else 'clear')

def responder(pergunta_usuario):
    pergunta_usuario = pergunta_usuario.lower().strip()

    conn = sqlite3.connect('unismart.db')
    cursor = conn.cursor()

    cursor.execute("SELECT resposta FROM faq WHERE pergunta = ?", (pergunta_usuario,))
    resultado = cursor.fetchone()

    if resultado:
        conn.close()
        return resultado[0]

    if "pre√ßo" in pergunta_usuario or "quanto" in pergunta_usuario or "custa" in pergunta_usuario:
        cursor.execute("SELECT nome, preco FROM servicos")
        servicos = cursor.fetchall()
        for nome, preco in servicos:
            if nome.lower().split()[0] in pergunta_usuario:
                conn.close()
                return f"O servi√ßo '{nome}' custa R${preco:.2f}."

    conn.close()
    return "Desculpe, n√£o encontrei uma resposta para isso. Deseja falar com um atendente?"

def exibir_menu():
    print("\nüìã MENU DE OP√á√ïES UniSmart (digite o nome da op√ß√£o):")
    print("- servi√ßos   ‚Üí Ver lista de servi√ßos")
    print("- pre√ßos     ‚Üí Ver pre√ßos dos servi√ßos")
    print("- avalia√ß√£o  ‚Üí Avaliar o atendimento de 1 a 5")
    print("- fun√ß√µes    ‚Üí Saber o que o chatbot faz")
    print("- perguntar  ‚Üí Fazer uma pergunta manual")
    print("- sair       ‚Üí Encerrar o atendimento")

def listar_servicos():
    conn = sqlite3.connect('unismart.db')
    cursor = conn.cursor()
    cursor.execute("SELECT nome FROM servicos")
    servicos = cursor.fetchall()
    conn.close()

    print("\nüîß Servi√ßos dispon√≠veis:")
    for i, (nome,) in enumerate(servicos, start=1):
        print(f"{i}. {nome}")

def listar_precos():
    conn = sqlite3.connect('unismart.db')
    cursor = conn.cursor()
    cursor.execute("SELECT nome, preco FROM servicos")
    servicos = cursor.fetchall()
    conn.close()

    print("\nüí∞ Tabela de Pre√ßos:")
    for nome, preco in servicos:
        print(f"- {nome}: R${preco:.2f}")

def avaliar_atendimento():
    while True:
        try:
            nota = int(input("Por favor, avalie nosso atendimento de 1 (p√©ssimo) a 5 (excelente): "))
            if nota < 1 or nota > 5:
                print("Nota inv√°lida. Digite um n√∫mero de 1 a 5.")
                continue
            break
        except ValueError:
            print("Entrada inv√°lida. Digite um n√∫mero.")

    conn = sqlite3.connect('unismart.db')
    cursor = conn.cursor()
    cursor.execute("CREATE TABLE IF NOT EXISTS avaliacoes (id INTEGER PRIMARY KEY AUTOINCREMENT, nota INTEGER NOT NULL, data_hora TIMESTAMP DEFAULT CURRENT_TIMESTAMP)")
    cursor.execute("INSERT INTO avaliacoes (nota) VALUES (?)", (nota,))
    conn.commit()
    conn.close()

    mensagens = {
        1: "Sentimos muito pela sua experi√™ncia. Vamos melhorar!",
        2: "Lamentamos n√£o ter atingido suas expectativas. Obrigado pelo feedback.",
        3: "Agradecemos sua avalia√ß√£o. Estamos sempre buscando melhorar!",
        4: "Muito obrigado! Ficamos felizes que tenha gostado.",
        5: "üòç Uau! Agradecemos imensamente sua avalia√ß√£o m√°xima!"
    }
    print("UniSmartBot:", mensagens[nota])

opcoes_validas = {
    'servi√ßos': 'servi√ßos',
    'pre√ßos': 'pre√ßos',
    'avalia√ß√£o': 'avalia√ß√£o',
    'fun√ß√µes': 'fun√ß√µes',
    'perguntar': 'perguntar',
    'sair': 'sair'
}

print("ü§ñ UniSmartBot iniciado!")
while True:
    limpar_tela()
    exibir_menu()
    escolha_raw = input("\nDigite sua escolha: ").lower().strip()

    sugestao = difflib.get_close_matches(escolha_raw, opcoes_validas.keys(), n=1, cutoff=0.6)
    escolha = sugestao[0] if sugestao else escolha_raw

    if escolha == 'sair':
        print("UniSmartBot: At√© logo! Ficamos √† disposi√ß√£o.")
        break
    elif escolha == 'servi√ßos':
        listar_servicos()
    elif escolha == 'pre√ßos':
        listar_precos()
    elif escolha == 'avalia√ß√£o':
        avaliar_atendimento()
    elif escolha == 'fun√ß√µes':
        print(responder("o que voc√™ faz?"))
    elif escolha == 'perguntar':
        pergunta = input("Digite sua pergunta: ")
        print("UniSmartBot:", responder(pergunta))
    else:
        print(f"Op√ß√£o '{escolha_raw}' n√£o reconhecida.")
    
    input("\nPressione Enter para voltar ao menu...")
